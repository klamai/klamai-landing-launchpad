// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import { Database } from '@/types/database';

// Use environment variables for security - NO FALLBACK VALUES
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Validate environment variables - FAIL FAST if not configured
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  throw new Error(
    '❌ CRÍTICO: Variables de entorno de Supabase no configuradas.\n' +
    'Por favor, crea un archivo .env.local en la raíz del proyecto con:\n' +
    'VITE_SUPABASE_URL=https://your-project.supabase.co\n' +
    'VITE_SUPABASE_ANON_KEY=your-anon-key\n' +
    '\nConsulta SECURITY_SETUP.md para más información.'
  );
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  }
});

// Interceptor global para manejar errores de sesión inválida
supabase.auth.onAuthStateChange((event, session) => {
  if (event === 'SIGNED_OUT') {
    // Limpiar cualquier estado persistente
    localStorage.removeItem('supabase.auth.token');
    sessionStorage.clear();
  }
});

// Función para manejar errores de sesión inválida
export const handleSessionError = (error: any) => {
  if (error?.message?.includes('session_not_found') || 
      error?.code === 'session_not_found' ||
      error?.message?.includes('JWT does not exist')) {
    
    console.log('Session invalid, signing out...');
    
    // Cerrar sesión automáticamente
    supabase.auth.signOut().then(() => {
      // Redirigir al inicio
      if (typeof window !== 'undefined') {
        window.location.href = '/';
      }
    });
    
    return true; // Error manejado
  }
  
  return false; // Error no manejado
};